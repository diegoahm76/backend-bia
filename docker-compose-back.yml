version: '3.8'

services: # the different images that will be running as containers
  web: # service name
    #build the image for the web service from the dockerfile in parent directory.  
    build: . 
    # command directive passes the parameters to the service and they will be executed by the service. In this example, these are django commands which will be executed in the container where django lives.
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000" 
    # map data and files from parent directory in host to microservice directory in docker container
    volumes: 
      - .:/backend-bia 
      - static_volume:/home/app/backend-bia/build/static
      - /data/bia/gestor:/data/bia/gestor
    # file where env variables are stored. Used as best practice so as not to expose secret keys
    env_file: 
      - .env # name of the env file
    # name of the image
    image: backend-bia-app 
    # expose the port to other services defined here so that they can access this service via the exposed port. In the case of Django, this is 8000 by default
    ports: 
      - 8000:8000 # retrieved from the .env file
    restart: "on-failure"
    # cannot start if db service is not up and running

volumes:
  static_volume:
